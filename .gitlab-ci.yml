stages:
  - build
  - test-interpreter
  - test-interworking
  - examples

.base:
  image: camilstaps/abc-interpreter
  before_script:
    - ln -s "$PWD/src/abcopt" /opt/clean/lib/exe/abcopt
    - ln -s "$PWD/src/bcgen" /opt/clean/lib/exe/bcgen
    - ln -s "$PWD/src/bclink" /opt/clean/lib/exe/bclink
    - ln -s "$PWD/src/bcprelink" /opt/clean/lib/exe/bcprelink
    - ln -s "$PWD/src/bcstrip" /opt/clean/lib/exe/bcstrip
    - sed -i '/^import code from library/d' lib/ABC/Interpreter/Util.icl
    - make -C src

build:
  extends: .base
  stage: build
  script:
    - CFLAGS='-DDEBUG_ALL_INSTRUCTIONS -DDEBUG_CLEAN_LINKS=10 -DDEBUG_GARBAGE_COLLECTOR=10' make -B -C src

build-clang:
  extends: .base
  stage: build
  script:
    - OS=Linux CC=clang CFLAGS='-DDEBUG_ALL_INSTRUCTIONS -DDEBUG_CLEAN_LINKS=10 -DDEBUG_GARBAGE_COLLECTOR=10' make -B -C src

build-windows:
  extends: .base
  stage: build
  script:
    - CC=x86_64-w64-mingw32-gcc OS=Windows_NT make -B -C src ByteCodeGenerator.exe ByteCodeLinker.exe ByteCodePrelinker.exe ByteCodeStripper.exe interpret.exe

build-wasm:
  extends: .base
  stage: build
  script:
    - cd src-js
    - make WebPublic
    - tar czvf WebPublic.tar.gz WebPublic
  artifacts:
    paths:
      - src-js/WebPublic.tar.gz
    expire_in: 3 months

.benchmark:
  extends: .base
  artifacts:
    paths:
      - test/*.junit.xml
    reports:
      junit: test/*.junit.xml

benchmark-x64:
  extends: .benchmark
  stage: test-interpreter
  script:
    - cd test
    - ./run_tests.sh -bfj

benchmark-x86:
  extends: .benchmark
  stage: test-interpreter
  script:
    - cd test
    - ./run_tests.sh -3bfj

benchmark-wasm:
  extends: .benchmark
  stage: test-interpreter
  script:
    - cd test
    - ./run_tests.sh -wbj

interworking-Start:
  extends: .base
  stage: test-interworking
  script:
    - cd test
    - ./run_tests.sh -qo functions
    - make -B test-CodeSharing
    - CFLAGS='-DCOMPUTED_GOTOS -Ofast -fno-unsafe-math-optimizations' make -B test-CodeSharing

interworking-GraphCopy:
  extends: .base
  stage: test-interworking
  script:
    - cd test
    - make -B test-GraphTest
    - CFLAGS='-DCOMPUTED_GOTOS -Ofast -fno-unsafe-math-optimizations' make -B test-GraphTest

interworking-GraphCopy-clang:
  extends: .base
  stage: test-interworking
  script:
    - export OS=Linux CC=clang
    - cd test
    - make -B test-GraphTest
    - CFLAGS='-DCOMPUTED_GOTOS -Ofast -fno-unsafe-math-optimizations' make -B test-GraphTest

examples:
  extends: .base
  stage: examples
  script:
    - cd examples
    - ./test.sh
